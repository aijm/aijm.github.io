<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>cs61c_lab1</title>
      <link href="/2018/12/23/cs61c-lab1/"/>
      <url>/2018/12/23/cs61c-lab1/</url>
      
        <content type="html"><![CDATA[<h3 id="Exercise-1-Binary-Alphabet"><a href="#Exercise-1-Binary-Alphabet" class="headerlink" title="Exercise 1: Binary Alphabet"></a>Exercise 1: Binary Alphabet</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">0  1  1  0  □  ■  ■  □</span><br><span class="line">1  0  0 1  ■  □  □  ■</span><br><span class="line">1  1  1 1    --&gt;  ■  ■  ■  ■</span><br><span class="line">1  0  0 1  ■  □  □  ■</span><br><span class="line">1  0  0 1  ■  □  □  ■</span><br></pre></td></tr></table></figure><p>checkoff:</p><ul><li>What five decimal digits produce the pattern above? What five hexadecimal digits?</li><li>What letter is drawn with 1,1,9,9,6? 0xF8F88?</li><li>What is the hexadecimal representation you would use to spell the letter ‘B’? ‘N’ (you probably won’t want to use 5 hex digits for this one)?<a id="more"></a>answer:</li><li>十进制 6,9,15,9,9; 十六进制 0x6,0x9,0xF,0x9,0x9–&gt;0x69F99</li><li>1,1,9,9,6–&gt;<code>J</code>; 0xF8F88–&gt;<code>F</code></li><li>见图：0xE9E9E–&gt;<code>B</code>;0x9DB90–&gt;<code>N</code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">B</span><br><span class="line">■  ■  ■  □</span><br><span class="line">■  □  □  ■</span><br><span class="line">■  ■  ■  □</span><br><span class="line">■  □  □  ■</span><br><span class="line">■  ■  ■  □</span><br><span class="line">N</span><br><span class="line">■  □  □  ■</span><br><span class="line">■  ■  □  ■</span><br><span class="line">■  □  ■  ■</span><br><span class="line">■  □  □  ■</span><br><span class="line">□  □  □  □</span><br></pre></td></tr></table></figure></li></ul><h3 id="Exercise-2-Simple-C-Program"><a href="#Exercise-2-Simple-C-Program" class="headerlink" title="Exercise 2: Simple C Program"></a>Exercise 2: Simple C Program</h3><p>checkoff:</p><ul><li>Explain the changes you made.</li><li>Explain the minimum number of distinct values needed for the preprocessor macros.</li><li>What does the -o flag do with gcc?</li></ul><p>answer:</p><ul><li>V0=3,V1=3,V3=3,V2!=0</li><li>3</li><li><code>gcc -o &lt;file&gt;</code> –&gt; Place the executable output into file</li></ul><h3 id="Exercise-3-Debugger"><a href="#Exercise-3-Debugger" class="headerlink" title="Exercise 3: Debugger"></a>Exercise 3: Debugger</h3><ol><li>How do you pass command line arguments to a program when using gdb?<br><code>run arg1 arg2 ...</code></li><li>How do you set a breakpoint which only occurs when a set of conditions is true (e.g. when certain variables are a certain value)?<br><code>b file:line if &lt;condition&gt;</code></li><li>How do you execute the next line of C code in the program after stopping at a breakpoint?<br><code>next</code></li><li>If the next line of code is a function call, you’ll execute the whole function call at once if you use your answer to #3. (If not, consider a different command for #3!) How do you tell GDB that you want to debug the code inside the function instead? (If you changed your answer to #3, then that answer is most likely now applicable here.)<br><code>step</code></li><li>How do you resume the program after stopping at a breakpoint?<br><code>INTERRUPT or Ctrl+c</code></li><li>How can you see the value of a variable (or even an expression like 1+2) in gdb?<br><code>p &lt;exp&gt;</code></li><li>How do you configure gdb so it prints the value of a variable after every step?<br><code>display &lt;variable&gt;</code></li><li>How do you print a list of all variables and their values in the current function?<br><code>info args, info locals, info variables</code></li><li>How do you exit out of gdb?<br><code>quit</code></li></ol><h3 id="Exercise-4-5-6"><a href="#Exercise-4-5-6" class="headerlink" title="Exercise 4,5,6"></a>Exercise 4,5,6</h3><ol><li>C program requires user input: how to run or gdb without geting stuck?<br>通过重定向方法，重定向输入输出流<code>stdin</code>和<code>stdout</code>为文件，如：<br><code>./a.out &lt; intput.txt &gt; output.txt</code>，对于gdb,则是<code>run &lt; input.txt &gt; output.txt</code></li><li>how to check if a linked list has a cycle? (tortoise and hare)</li></ol>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cs61c </tag>
            
            <tag> gdb </tag>
            
            <tag> cgdb </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>cs61c_lab0</title>
      <link href="/2018/12/23/cs61c-lab0/"/>
      <url>/2018/12/23/cs61c-lab0/</url>
      
        <content type="html"><![CDATA[<h2 id="问题和任务"><a href="#问题和任务" class="headerlink" title="问题和任务"></a>问题和任务</h2><p>lab0给了一个文件夹，目录如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">aijm@DESKTOP-R8SS06A:/mnt/d/学习/cs61c/lab00$ tree -L 1</span><br><span class="line">.</span><br><span class="line">├── bin</span><br><span class="line">├── config</span><br><span class="line">└── user</span><br></pre></td></tr></table></figure></p><p>其中 bin 目录存储了一些程序，config 包含 users.list 和 users.list.bak, user 包含各个不同用户的目录，每个用户目录下都有init.d文件夹。</p><p>问题背景是，当黑客侵入系统时，会将他的username 加入到配置文件 users.list中，而users.list每次更改都会产生一个备份，users.list.bak.<br><a id="more"></a></p><h3 id="任务1：-找出侵入系统的用户"><a href="#任务1：-找出侵入系统的用户" class="headerlink" title="任务1： 找出侵入系统的用户"></a>任务1： 找出侵入系统的用户</h3><p>方法是比较users.list 和 users.list.bak,查看其中的不同,可以使用 <code>diff</code> 和 <code>sdiff</code>命令：</p><h4 id="sdiff"><a href="#sdiff" class="headerlink" title="sdiff"></a>sdiff</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usage: sdiff [  -l | -s ][  -o OutFile] [  -w Number ]File1 File2</span><br></pre></td></tr></table></figure><p>则通过 -s 选项仅仅输出不同的行：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">aijm@DESKTOP-R8SS06A:/mnt/d/学习/cs61c/lab00/config$ sdiff -s users.list users.list.bak</span><br><span class="line">sonicspaceman</span><br></pre></td></tr></table></figure></p><p>则可以知道，入侵者的用户名是: <strong>sonicspaceman</strong>,一个非常骚气的名字。。。</p><p>这个入侵者可能会修改已有的程序，或者植入自己的程序，我们需要找出bin目录下的这些程序。</p><h3 id="任务2：-找出入侵者可能修改、植入的程序"><a href="#任务2：-找出入侵者可能修改、植入的程序" class="headerlink" title="任务2： 找出入侵者可能修改、植入的程序"></a>任务2： 找出入侵者可能修改、植入的程序</h3><p>方法是通过查看users.list的修改时间，再看bin目录下程序的修改时间，找出可能的程序。</p><p>通过<code>stat</code>命令查看文件时间戳：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">aijm@DESKTOP-R8SS06A:/mnt/d/学习/cs61c/lab00/config$ <span class="built_in">stat</span> *</span><br><span class="line">  File: users.list</span><br><span class="line">  Size: 91687           Blocks: 184        IO Block: 4096   regular file</span><br><span class="line">Device: dh/13d  Inode: 562949954017106  Links: 1</span><br><span class="line">Access: (0777/-rwxrwxrwx)  Uid: ( 1000/    aijm)   Gid: ( 1000/    aijm)</span><br><span class="line">Access: 2018-12-23 01:23:28.098195800 +0800</span><br><span class="line">Modify: 2018-08-21 06:41:30.000000000 +0800</span><br><span class="line">Change: 2018-12-23 00:07:05.114099700 +0800</span><br><span class="line"> Birth: -</span><br><span class="line">  File: users.list.bak</span><br><span class="line">  Size: 91673           Blocks: 184        IO Block: 4096   regular file</span><br><span class="line">Device: dh/13d  Inode: 562949954017107  Links: 1</span><br><span class="line">Access: (0777/-rwxrwxrwx)  Uid: ( 1000/    aijm)   Gid: ( 1000/    aijm)</span><br><span class="line">Access: 2018-12-23 01:22:12.619836900 +0800</span><br><span class="line">Modify: 2018-08-21 06:40:48.000000000 +0800</span><br><span class="line">Change: 2018-12-23 00:07:05.114099700 +0800</span><br><span class="line"> Birth: -</span><br></pre></td></tr></table></figure></p><p>可以看到 users.list 在 <strong>Modify: 2018-08-21 06:41:30.000000000 +0800</strong> 被修改，于是在bin目录下，可以让文件按修改时间进行排序：<br>用 <code>ls -lat</code>,按修改时间排序：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">aijm@DESKTOP-R8SS06A:/mnt/d/学习/cs61c/lab00/bin$ ls -lat</span><br><span class="line">total 4116</span><br><span class="line">drwxrwxrwx 1 aijm aijm    4096 Dec 23 00:08 ..</span><br><span class="line">drwxrwxrwx 1 aijm aijm    4096 Dec 23 00:08 .</span><br><span class="line">-rwxrwxrwx 1 aijm aijm  182352 Aug 21 06:44 dog</span><br><span class="line">-rwxrwxrwx 1 aijm aijm  182352 Aug 21 06:43 sudo</span><br><span class="line">-rwxrwxrwx 1 aijm aijm   34888 Aug 21 06:39 bzip2</span><br><span class="line">-rwxrwxrwx 1 aijm aijm   59608 Aug 21 06:39 chmod</span><br><span class="line">-rwxrwxrwx 1 aijm aijm   67768 Aug 21 06:39 chown</span><br><span class="line">-rwxrwxrwx 1 aijm aijm   72000 Aug 21 06:39 dmesg</span><br><span class="line">-rwxrwxrwx 1 aijm aijm   35000 Aug 21 06:39 <span class="built_in">echo</span></span><br><span class="line">-rwxrwxrwx 1 aijm aijm   51512 Aug 21 06:39 ed</span><br><span class="line">-rwxrwxrwx 1 aijm aijm  133792 Aug 21 06:39 ls</span><br><span class="line">-rwxrwxrwx 1 aijm aijm   80056 Aug 21 06:39 mkdir</span><br><span class="line">-rwxrwxrwx 1 aijm aijm   38952 Aug 21 06:39 more</span><br><span class="line">-rwxrwxrwx 1 aijm aijm  137440 Aug 21 06:39 mv</span><br><span class="line">-rwxrwxrwx 1 aijm aijm  423384 Aug 21 06:39 tar</span><br><span class="line">-rwxrwxrwx 1 aijm aijm   88280 Aug 21 06:39 touch</span><br><span class="line">-rwxrwxrwx 1 aijm aijm 1113504 Aug 21 06:37 bash</span><br><span class="line">-rwxrwxrwx 1 aijm aijm   63672 Aug 21 06:37 chgrp</span><br><span class="line">-rwxrwxrwx 1 aijm aijm  219528 Aug 21 06:37 grep</span><br><span class="line">-rwxrwxrwx 1 aijm aijm    2301 Aug 21 06:37 gunzip</span><br><span class="line">-rwxrwxrwx 1 aijm aijm   26704 Aug 21 06:37 <span class="built_in">kill</span></span><br><span class="line">-rwxrwxrwx 1 aijm aijm  170760 Aug 21 06:37 less</span><br><span class="line">-rwxrwxrwx 1 aijm aijm  245872 Aug 21 06:37 nano</span><br><span class="line">-rwxrwxrwx 1 aijm aijm   63704 Aug 21 06:37 rm</span><br><span class="line">-rwxrwxrwx 1 aijm aijm  109000 Aug 21 06:37 sed</span><br><span class="line">-rwxrwxrwx 1 aijm aijm   35032 Aug 21 06:37 uname</span><br><span class="line">-rwxrwxrwx 1 aijm aijm     946 Aug 21 06:37 <span class="built_in">which</span></span><br><span class="line">-rwxrwxrwx 1 aijm aijm   35064 Aug 21 06:35 cat</span><br><span class="line">-rwxrwxrwx 1 aijm aijm  141528 Aug 21 06:35 cp</span><br><span class="line">-rwxrwxrwx 1 aijm aijm  100568 Aug 21 06:35 date</span><br><span class="line">-rwxrwxrwx 1 aijm aijm  101560 Aug 21 06:35 gzip</span><br><span class="line">-rwxrwxrwx 1 aijm aijm   67808 Aug 21 06:35 ln</span><br><span class="line">-rwxrwxrwx 1 aijm aijm   35000 Aug 21 06:35 <span class="built_in">pwd</span></span><br><span class="line">-rwxrwxrwx 1 aijm aijm   35000 Aug 21 06:35 sleep</span><br></pre></td></tr></table></figure></p><p>可以看到，有<strong>dog</strong>和<strong>sudo</strong>的更改发生在入侵之后。</p><p>入侵者往往不会仅仅简单的修改程序、植入程序，还常常修改配置文件，使某些用户登录后自动执行这些程序。user目录下的init.d目录有许多程序，这些程序会在用户登录后自启动，所以需要查看这些程序中是否包含之前的可疑程序。</p><h3 id="任务3-找出各个用户init-d目录下可能被污染的程序"><a href="#任务3-找出各个用户init-d目录下可能被污染的程序" class="headerlink" title="任务3: 找出各个用户init.d目录下可能被污染的程序"></a>任务3: 找出各个用户init.d目录下可能被污染的程序</h3><p>方法是找出所有文件中包含<code>&quot;dog&quot;,&quot;sudo&quot;</code>字符串的位置。</p><h4 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h4><p>grep 是一个非常强大的文本搜索工具，常见用法如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Grep选项：</span><br><span class="line">* : 表示当前目录所有文件，也可以是某个文件名</span><br><span class="line">-r 是递归查找</span><br><span class="line">-n 是显示行号</span><br><span class="line">-R 查找所有文件包含子目录</span><br><span class="line">-i 忽略大小写</span><br><span class="line"></span><br><span class="line">有意思的命令行参数：</span><br><span class="line">grep -E &apos;123|abc&apos; filename : 找出文件（filename）中包含123或者包含abc的行</span><br><span class="line">grep -i pattern files ：不区分大小写地搜索。默认情况区分大小写</span><br><span class="line">grep -l pattern files ：只列出匹配的文件名,不列出路径</span><br><span class="line">grep -L pattern files ：列出不匹配的文件名</span><br><span class="line">grep -w pattern files ：只匹配整个单词，而不是字符串的一部分（如匹配‘magic’，而不是‘magical’）</span><br><span class="line">grep -C number pattern files ：匹配的上下文分别显示[number]行</span><br><span class="line">grep pattern1 | pattern2 files ：显示匹配 pattern1 或 pattern2 的行</span><br><span class="line">grep pattern1 files | grep pattern2 ：显示既匹配 pattern1 又匹配 pattern2 的行</span><br></pre></td></tr></table></figure></p><p>所以，可以运行如下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">aijm@DESKTOP-R8SS06A:/mnt/d/学习/cs61c/lab00/user$ grep -E -rn <span class="string">'dog|sudo'</span> ./</span><br><span class="line">./crealex/init.d/dbus:69:  dog</span><br><span class="line">./konotacja/init.d/networking:49:           sudo log_failure_msg <span class="string">"can't create <span class="variable">$RUN_DIR</span>"</span></span><br><span class="line">./oeufmayo/init.d/x11-common:98:    dog</span><br><span class="line">./Qondanisa/init.d/networking:169:      dog</span><br><span class="line">./Thiesi/init.d/rsync:87:    sudo dog</span><br></pre></td></tr></table></figure></p><p>则找出了包含<code>&quot;dog&quot;,&quot;sudo&quot;</code>的位置。</p><h3 id="任务4-删除这些文件，或文件中有问题的行"><a href="#任务4-删除这些文件，或文件中有问题的行" class="headerlink" title="任务4: 删除这些文件，或文件中有问题的行"></a>任务4: 删除这些文件，或文件中有问题的行</h3><h4 id="sed"><a href="#sed" class="headerlink" title="sed"></a>sed</h4><blockquote><p>转载自<a href="https://blog.csdn.net/xj626852095/article/details/26101273" target="_blank" rel="noopener">Linux Shell中删除和替换文件中某一行的方法</a></p></blockquote><p>sed是一个很好的文件处理工具，本身是一个管道命令，主要是以行为单位进行处理，可以将数据行进行替换、删除、新增、选取等特定工作，下面先了解一下sed的用法<br>sed命令行格式为：<br>         sed [-nefri] ‘command’ 输入文本        </p><p>常用选项：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-n∶使用安静(silent)模式。在一般 sed 的用法中，所有来自 STDIN的资料一般都会被列出到萤幕上。但如果加上 -n 参数后，则只有经过sed 特殊处理的那一行(或者动作)才会被列出来。</span><br><span class="line">-e∶直接在指令列模式上进行 sed 的动作编辑；</span><br><span class="line">-f∶直接将 sed 的动作写在一个档案内， -f filename 则可以执行 filename 内的sed 动作；</span><br><span class="line">-r∶sed 的动作支援的是延伸型正规表示法的语法。(预设是基础正规表示法语法)</span><br><span class="line">-i∶直接修改读取的档案内容，而不是由屏幕输出。</span><br></pre></td></tr></table></figure></p><p>常用命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a   ∶新增， a 的后面可以接字串，而这些字串会在新的一行出现(目前的下一行)～</span><br><span class="line">c   ∶取代， c 的后面可以接字串，这些字串可以取代 n1,n2 之间的行！</span><br><span class="line">d   ∶删除</span><br><span class="line">i   ∶插入， i 的后面可以接字串，而这些字串会在新的一行出现(目前的上一行)；</span><br><span class="line">p   ∶列印，亦即将某个选择的资料印出。通常 p 会与参数 sed -n 一起运作</span><br><span class="line">s   ∶取代，可以直接进行取代！通常这个 s 的动作可以搭配正规表示法！例如 1,20s/old/new/g 就是啦！</span><br></pre></td></tr></table></figure></p><p>所以可以通过以下命令进行删除之前查找到的行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i &apos;69d&apos; ./crealex/init.d/dbus</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> learn </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cs61c </tag>
            
            <tag> linux </tag>
            
            <tag> diff,sdiff </tag>
            
            <tag> grep </tag>
            
            <tag> stat </tag>
            
            <tag> sed </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>JDK and JRE, java.lang.UnsupportedClassVersionError</title>
      <link href="/2018/12/21/JDK-and-JRE/"/>
      <url>/2018/12/21/JDK-and-JRE/</url>
      
        <content type="html"><![CDATA[<p>今天我下载了jdk 11.0.1,一番配置后，运行简单的程序时时出现了<code>java.lang.UnsupportedClassVersionError</code>的错误，错误信息如下：</p><h3 id="错误信息"><a href="#错误信息" class="headerlink" title="错误信息"></a>错误信息</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">ajm@DESKTOP-R8SS06A MINGW64 /d/学习/cs61b</span><br><span class="line">$ java HelloWorld</span><br><span class="line">Error: A JNI error has occurred, please check your installation and try again</span><br><span class="line">Exception in thread &quot;main&quot; java.lang.UnsupportedClassVersionError: HelloWorld has been compiled by a more recent version of the Java Runtime (class file version 55.0), this version of the Java Runtime only recognizes class file versions up to 52.0</span><br><span class="line">        at java.lang.ClassLoader.defineClass1(Native Method)</span><br><span class="line">        at java.lang.ClassLoader.defineClass(Unknown Source)</span><br><span class="line">        at java.security.SecureClassLoader.defineClass(Unknown Source)</span><br><span class="line">        at java.net.URLClassLoader.defineClass(Unknown Source)</span><br><span class="line">        at java.net.URLClassLoader.access$100(Unknown Source)</span><br><span class="line">        at java.net.URLClassLoader$1.run(Unknown Source)</span><br><span class="line">        at java.net.URLClassLoader$1.run(Unknown Source)</span><br><span class="line">        at java.security.AccessController.doPrivileged(Native Method)</span><br><span class="line">        at java.net.URLClassLoader.findClass(Unknown Source)</span><br><span class="line">        at java.lang.ClassLoader.loadClass(Unknown Source)</span><br><span class="line">        at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)</span><br><span class="line">        at java.lang.ClassLoader.loadClass(Unknown Source)</span><br><span class="line">        at sun.launcher.LauncherHelper.checkAndLoadMain(Unknown Source)</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>由错误信息可以知道，是由于高版本的JDK(Java Development Kit),编译产生的.class文件在低版本的JRE(Java Runtime Environment) 无法运行而报错。JDK是用于java程序开发的工具包，包含javac编译器、jar打包工具等。JRE是能够让计算机运行java程序的软件包,比如java HelloWorld,执行HelloWorld程序。</p><h4 id="查看JDK-JRE版本"><a href="#查看JDK-JRE版本" class="headerlink" title="查看JDK,JRE版本"></a>查看JDK,JRE版本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ajm@DESKTOP-R8SS06A MINGW64 /d/学习/cs61b</span><br><span class="line">$ java -version</span><br><span class="line">java version <span class="string">"1.8.0_171"</span></span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_171-b11)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.171-b11, mixed mode)</span><br><span class="line"></span><br><span class="line">ajm@DESKTOP-R8SS06A MINGW64 /d/学习/cs61b</span><br><span class="line">$ javac -version</span><br><span class="line">javac 11.0.1</span><br></pre></td></tr></table></figure><p>发现JRE是老的版本，于是我直接删除了这个老的版本。但是发现运行时出了问题：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ajm@DESKTOP-R8SS06A MINGW64 /d/学习/cs61b</span><br><span class="line">$ java -version</span><br><span class="line">bash: /c/Program Files (x86)/Common Files/Oracle/Java/javapath/java: No such file or directory</span><br></pre></td></tr></table></figure></p><p>这是因为环境变量中的路径问题，直接在PATH中删除老版本java的路径，就能正确找到java 11.0.1这个版本。</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> error </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>error C2589: (: ::右边的非法标记</title>
      <link href="/2018/11/25/error-C2589-%E5%8F%B3%E8%BE%B9%E7%9A%84%E9%9D%9E%E6%B3%95%E6%A0%87%E8%AE%B0/"/>
      <url>/2018/11/25/error-C2589-%E5%8F%B3%E8%BE%B9%E7%9A%84%E9%9D%9E%E6%B3%95%E6%A0%87%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>原文：<a href="https://blog.csdn.net/zhuangshn/article/details/5537499" target="_blank" rel="noopener">https://blog.csdn.net/zhuangshn/article/details/5537499</a> </p></blockquote><h2 id="error-C2589-“-”-“-”右边的非法标记"><a href="#error-C2589-“-”-“-”右边的非法标记" class="headerlink" title="error C2589: “(”: “::”右边的非法标记"></a>error C2589: “(”: “::”右边的非法标记</h2><ol><li><p>错误输出<br> error C2589: “(”: “::”右边的非法标记</p><p> error C2059: 语法错误 : “::”</p></li><li><p>错误代码举例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">num_choices = std::max(1, std::min(26, num_choices));</span><br></pre></td></tr></table></figure></li><li><p>函数模板max   </p><p>注：模板就是实现代码重用机制的一种工具，它可以实现类型参数化，即把类型定义为参数， 从而实现了真正的代码可重用性。模版可以分为两类，一个是函数模版，另外一个是类模版。</p></li><li><p>错误原因</p><p>函数模板max与Visual C++中的全局的宏max冲突。 </p></li><li><p>解决办法</p><p> 第一种办法：设置项目属性，在预定义处理器中添加定义<code>NOMINMAX</code>来禁止使用Vsual C++的min/max宏定义。</p><p> 项目属性   ——&gt; C/C++ ——&gt; 预处理器 ——&gt; 预处理器定义 (此处添加预定义编译开关   NOMINMAX）</p><p> 第二种办法： 加上括号，与Vsual C++的min/max宏定义区分开</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">num_choices = (std::max)(1, std::min(26, num_choices));</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> error </category>
          
      </categories>
      
      
        <tags>
            
            <tag> error </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>cmake find_path(),windows带空格的路径</title>
      <link href="/2018/11/25/cmake-find-path-windows%E5%B8%A6%E7%A9%BA%E6%A0%BC%E7%9A%84%E8%B7%AF%E5%BE%84/"/>
      <url>/2018/11/25/cmake-find-path-windows%E5%B8%A6%E7%A9%BA%E6%A0%BC%E7%9A%84%E8%B7%AF%E5%BE%84/</url>
      
        <content type="html"><![CDATA[<p>cmake中的windows 路径如果有空格，比如<code>D:/Program Files/libigl</code>, 需要改成<code>D:/Program\ Files/libigl</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">find_path(LIBIGL_INCLUDE_DIR igl/readOBJ.h</span><br><span class="line">    HINTS</span><br><span class="line">        ENV LIBIGL</span><br><span class="line">        ENV LIBIGLROOT</span><br><span class="line">        ENV LIBIGL_ROOT</span><br><span class="line">        ENV LIBIGL_DIR</span><br><span class="line">    PATHS</span><br><span class="line">        $&#123;CMAKE_SOURCE_DIR&#125;/../..</span><br><span class="line">        $&#123;CMAKE_SOURCE_DIR&#125;/..</span><br><span class="line">        $&#123;CMAKE_SOURCE_DIR&#125;</span><br><span class="line">        $&#123;CMAKE_SOURCE_DIR&#125;/libigl</span><br><span class="line">        $&#123;CMAKE_SOURCE_DIR&#125;/../libigl</span><br><span class="line">        $&#123;CMAKE_SOURCE_DIR&#125;/../../libigl</span><br><span class="line">        D:/Program\ Files/libigl</span><br><span class="line">        /usr</span><br><span class="line">        /usr/local</span><br><span class="line">        /usr/local/igl/libigl</span><br><span class="line">    PATH_SUFFIXES include</span><br><span class="line">)</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> error </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cmake </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hadoop集群搭建</title>
      <link href="/2018/09/26/hadoop%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/"/>
      <url>/2018/09/26/hadoop%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="hadoop-集群搭建"><a href="#hadoop-集群搭建" class="headerlink" title="hadoop 集群搭建"></a>hadoop 集群搭建</h1><p>实验室当前hadoop集群节点如下：</p><table><thead><tr><th>主机名</th><th>用户名</th><th>IP</th><th>集群中的角色</th></tr></thead><tbody><tr><td>master</td><td>hadoop</td><td>10.13.61.122</td><td>NameNode、JobTracker</td></tr><tr><td>slave1</td><td>hadoop</td><td>10.13.61.125</td><td>DataNode、TaskTracker</td></tr><tr><td>slave2</td><td>hadoop</td><td>10.13.61.132</td><td>DataNode、TaskTracker</td></tr><tr><td>slave3</td><td>hadoop</td><td>10.13.61.146</td><td>DataNode、TaskTracker</td></tr><tr><td>slave4</td><td>hadoop</td><td>10.13.61.144</td><td>DataNode、TaskTracker</td></tr><tr><td>slave5</td><td>hadoop</td><td>10.13.61.143</td><td>DataNode、TaskTracker</td></tr><tr><td>slave6</td><td>hadoop</td><td>10.13.61.147</td><td>DataNode、TaskTracker</td></tr><tr><td>ajm-zju</td><td>hadoop</td><td>10.13.61.129</td><td>DataNode、TaskTracker</td></tr></tbody></table><p>各个节点的用户名均设置为 <strong>hadoop</strong>,密码均为 <strong>123456</strong>。其中slave3,slave4目前一般不使用。</p><p>hadoop集群安装主要有以下几个步骤：</p><ol><li>环境配置(host设置，ssh免密登录，Java安装等)</li><li>hadoop安装及修改配置文件</li><li>运行及测试</li></ol><a id="more"></a><h2 id="一、环境配置"><a href="#一、环境配置" class="headerlink" title="一、环境配置"></a>一、环境配置</h2><h3 id="1-用户、主机名、hosts文件"><a href="#1-用户、主机名、hosts文件" class="headerlink" title="1. 用户、主机名、hosts文件"></a>1. 用户、主机名、hosts文件</h3><p>由于目前已经搭建好的hadoop集群的用户名均为hadoop，所以需要在Ubuntu系统上新建一个hadoop用户，步骤如下：</p><h4 id="创建hadoop操作用户"><a href="#创建hadoop操作用户" class="headerlink" title="创建hadoop操作用户"></a>创建hadoop操作用户</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo useradd -m hadoop -s /bin/bash</span><br></pre></td></tr></table></figure><h4 id="给hadoop用户添加密码"><a href="#给hadoop用户添加密码" class="headerlink" title="给hadoop用户添加密码"></a>给hadoop用户添加密码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd hadoop</span><br></pre></td></tr></table></figure><p>输入密码后回车，密码在输入时是不可见的。</p><h4 id="给hadoop用户分配sudo权限"><a href="#给hadoop用户分配sudo权限" class="headerlink" title="给hadoop用户分配sudo权限"></a>给hadoop用户分配sudo权限</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo adduser hadoop sudo</span><br></pre></td></tr></table></figure><p>注销或重启系统，以hadoop用户登录</p><h4 id="切换用户"><a href="#切换用户" class="headerlink" title="切换用户"></a>切换用户</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su &lt;用户名&gt;，例如 su hadoop; su ajm</span><br></pre></td></tr></table></figure><p>输入要切换的用户密码，即可切换。</p><h4 id="安装vim、gedit"><a href="#安装vim、gedit" class="headerlink" title="安装vim、gedit"></a>安装vim、gedit</h4><p>vim是命令行编辑工具，gedit是图形界面编辑器，不习惯vim的话建议使用gedit<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install vim</span><br><span class="line">sudo apt-get install gedit</span><br></pre></td></tr></table></figure></p><h4 id="修改主机名"><a href="#修改主机名" class="headerlink" title="修改主机名"></a>修改主机名</h4><p><strong>不想修改主机名可以跳过此步，不会有影响</strong></p><p>在终端中输入hostname可以查看当前主机名，如下图：<br><img src="/images/1.jpg" alt=""><br>实际上在终端中有 <strong>hadoop@ajm-zju</strong>，其中hadoop是用户名，ajm-zju是主机名<br>比如要把新的主机加入集群，为了名称统一，可以将主机名改为 <strong>slave7</strong>,只需：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo hostname slave7 #暂时生效，重启后会失效</span><br><span class="line">sudo gedit /etc/hostname</span><br></pre></td></tr></table></figure></p><p>在文件中修改为slave7即可</p><h4 id="查看本机ip地址"><a href="#查看本机ip地址" class="headerlink" title="查看本机ip地址"></a>查看本机ip地址</h4><p>终端中输入以下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure></p><p><img src="/images/ip.jpg" alt=""><br>图中的 <strong>inet地址: 10.13.61.129</strong> 即为本机ip地址。</p><h4 id="配置hosts"><a href="#配置hosts" class="headerlink" title="配置hosts"></a>配置hosts</h4><p>/etc/hosts文件里维护了主机名和ip地址的映射关系，这样可以直接通过主机名通信，不用每次输入复杂的ip地址。通过cat命令可以直接在命令行中查看文件内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cat /etc/hosts</span><br></pre></td></tr></table></figure></p><p>在我的主机上，结果如下：<br><img src="/images/hosts.jpg" alt=""><br>可以hosts文件中保存了hadoop集群中其他主机的 <strong>ip地址<->主机名</-></strong> 映射关系，这样在hadoop进行通信时，可以直接通过主机名访问。所以如果集群加入新的主机，需要在新主机上修改hosts文件如上图，并加上本机地址映射<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/hosts</span><br></pre></td></tr></table></figure></p><p>终端中输入以上命令进行修改</p><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>如果配置成功，通过 <strong>ping</strong> 测试时，可以直接通过主机名而不需要ip地址<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ping master</span><br><span class="line">ping slave1</span><br><span class="line">ping 其他主机</span><br></pre></td></tr></table></figure></p><p>成功时结果如下：<br><img src="/images/ping.jpg" alt=""><br>注：ping指令会一直执行，可以通过 <code>ctrl+C</code> 停止</p><h3 id="2-配置SSH免密登录"><a href="#2-配置SSH免密登录" class="headerlink" title="2. 配置SSH免密登录"></a>2. 配置SSH免密登录</h3><p>由于hadoop集群中master主机需要调度各个slave，而这需要配置ssh远程登录服务。</p><h4 id="安装ssh"><a href="#安装ssh" class="headerlink" title="安装ssh"></a>安装ssh</h4><p>ubuntu 默认安装了ssh 客户端，没有安装服务端。运行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -e|grep ssh</span><br></pre></td></tr></table></figure></p><p>结果应该与下文类似：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hadoop@ajm-zju:/home/ajm$ ps -e|grep ssh</span><br><span class="line"> 1444 ?        00:00:00 sshd</span><br></pre></td></tr></table></figure></p><p>如果没有 <code>sshd</code> ，则说明没有安装ssh服务端，可以输入以下命令安装：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install openssh-server</span><br></pre></td></tr></table></figure></p><h4 id="ssh登录其他主机"><a href="#ssh登录其他主机" class="headerlink" title="ssh登录其他主机"></a>ssh登录其他主机</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh master</span><br></pre></td></tr></table></figure><p>出现身份警告时，输入yes并回车，需要输入密码时，请输入master主机的密码。<br>之后就登录了master主机，可以通过命令行操作maseter主机。<br><img src="/images/ssh.jpg" alt=""><br>注：退出登录使用<code>exit</code> 命令。</p><h4 id="生成RSA公私钥对"><a href="#生成RSA公私钥对" class="headerlink" title="生成RSA公私钥对"></a>生成RSA公私钥对</h4><p>但是每次ssh登录都需要输入密码太麻烦，所以可以通过公私钥的方式免密登录，配置方法是 <strong>A主机将公钥加入到B主机的authorized_keys中</strong>, 则A可以免密登录B。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa # 一路回车</span><br><span class="line">cd ~/.ssh # 公私钥对保存在此目录</span><br><span class="line">ls # 查看目录中的文件列表</span><br></pre></td></tr></table></figure></p><p>终端中输入以上命令后,可以看到有 id_rsa(私钥),id_rsa.pub(公钥)。<br>则将id_rsa.pub追加到master主机的authorized_keys中，则当前主机可以免密登录master主机。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id -i ~/.ssh/id_rsa.pub master</span><br></pre></td></tr></table></figure></p><p>如需要输入密码则输入master主机的密码</p><h4 id="ssh免密登录测试"><a href="#ssh免密登录测试" class="headerlink" title="ssh免密登录测试"></a>ssh免密登录测试</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh master</span><br></pre></td></tr></table></figure><p>如果直接登录成功，则配置正确。<br>登录master后，由于master主机已经生成了公私钥对，可以将master的公钥发给当前主机,实现master对当前主机的ssh免密登录。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id -i ~/.ssh/id_rsa.pub &lt;hostname&gt;</span><br></pre></td></tr></table></figure></p><p>如果出现错误，则需要在master主机中修改/etc/hosts，添加新主机的 ip<->hostname 映射。</-></p><h3 id="3-java安装"><a href="#3-java安装" class="headerlink" title="3. java安装"></a>3. java安装</h3><p>下载 <code>jdk-8u101.linux-x64.tar.gz</code>,运行以下命令解压到/usr目录下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /usr/java</span><br><span class="line">sudo tar -zxvf jdk-8u101.linux-x64.tar.gz -C /usr/java</span><br><span class="line">cd /usr/java/jdk1.8.0_101/bin</span><br><span class="line">./java -version #查看java版本</span><br></pre></td></tr></table></figure></p><p><img src="/images/java.jpg" alt=""><br>出现上图结果则正确安装</p><h4 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h4><p>在前面是通过<code>./java</code> 执行java可执行程序，但是为了执行这个程序，必须每次都切换到<code>/usr/java/jdk1.8.0_101/bin</code>目录下，为了能在任何目录下都能执行java的相关程序，需要配置环境变量。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/profile</span><br></pre></td></tr></table></figure></p><p>在/etc/profile文件末尾添加如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/usr/java/jdk1.8.0_101</span><br><span class="line">export JRE_HOME=/usr/java/jdk1.8.0_101/jre</span><br><span class="line">export CLASSPATH=$CLASSPATH:$JAVA_HOME/lib:$JRE_HOME/lib</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin</span><br></pre></td></tr></table></figure></p><p>保存后退出。通过<code>source</code>命令使得上面的修改生效。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure></p><p>输入以下命令测试是否成功配置环境变量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure></p><p><img src="/images/java1.jpg" alt=""><br>出现以上结果则成功配置。</p><h2 id="二、Hadoop安装"><a href="#二、Hadoop安装" class="headerlink" title="二、Hadoop安装"></a>二、Hadoop安装</h2><h3 id="1-安装及环境变量配置"><a href="#1-安装及环境变量配置" class="headerlink" title="1. 安装及环境变量配置"></a>1. 安装及环境变量配置</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>将hadoop-2.6.0.tar.gz解压到目录/opt<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo tar -zxvf hadoop-2.6.0.tar.gz -C /opt # 解压到/opt</span><br><span class="line">cd /opt      # 切到含有hadoop-2.6.0的目录下</span><br><span class="line">sudo chown -R hadoop:hadoop ./hadoop-2.6.0       # 修改文件权限</span><br></pre></td></tr></table></figure></p><h4 id="配置环境变量-1"><a href="#配置环境变量-1" class="headerlink" title="配置环境变量"></a>配置环境变量</h4><p>与java配置环境变量相同，在/etc/profile中追加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">export HADOOP_HOME=/opt/hadoop-2.6.0</span><br><span class="line">export HADOOP_LIB_NATIVE=$HADOOP_HOME/lib/native</span><br><span class="line">export PATH=$PATH:$HADOOP_HOME/bin</span><br><span class="line">export PATH=$PATH:$HADOOP_HOME/sbin</span><br><span class="line">export PATH=$PATH:$HADOOP_HOME/lib</span><br></pre></td></tr></table></figure></p><p>保存后退出。通过<code>source</code>命令使得上面的修改生效。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure></p><p>输入以下命令测试是否成功配置环境变量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop version</span><br></pre></td></tr></table></figure></p><p><img src="/images/hadoop_v.jpg" alt=""><br>出现以上结果则成功配置。</p><h3 id="2-配置参数"><a href="#2-配置参数" class="headerlink" title="2. 配置参数"></a>2. 配置参数</h3><p>需要对所有的集群节点配置参数，其中大部分文件都是相同的，可以配置一个之后直接复制覆盖相关文件，而比如不同主机java安装路径不同的话，需要复制之后修改hadoop-env.sh和yarn-env.sh的相关参数。<br>hadoop需要配置一些参数才能成功运行，这些配置文件都在<code>/opt/hadoop-2.6.0/etc/hadoop/</code> 目录下。</p><h4 id="hadoop-env-sh-and-yarn-env-sh"><a href="#hadoop-env-sh-and-yarn-env-sh" class="headerlink" title="hadoop-env.sh and yarn-env.sh"></a>hadoop-env.sh and yarn-env.sh</h4><p>在<code>hadoop-env.sh</code>和<code>yarn-env.sh</code>中需要指定java安装目录。在文件末尾追加以下内容即可：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/usr/java/jdk1.8.0_101</span><br></pre></td></tr></table></figure></p><h4 id="slaves"><a href="#slaves" class="headerlink" title="slaves"></a>slaves</h4><p>slaves文件需要添加所有的slave节点主机名如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">slave1</span><br><span class="line">slave2</span><br><span class="line">slave3</span><br><span class="line">slave4</span><br><span class="line">slave5</span><br><span class="line">slave6</span><br><span class="line">ajm-zju</span><br><span class="line">&lt;Your hostname&gt;</span><br></pre></td></tr></table></figure></p><h4 id="core-site-xml"><a href="#core-site-xml" class="headerlink" title="core-site.xml"></a>core-site.xml</h4><p>添加以下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">   &lt;property&gt;</span><br><span class="line">      &lt;name&gt;fs.defaultFS&lt;/name&gt;</span><br><span class="line">      &lt;value&gt;hdfs://master:8020&lt;/value&gt;</span><br><span class="line">      &lt;description&gt;&lt;/description&gt;</span><br><span class="line">   &lt;/property&gt;</span><br><span class="line">   &lt;property&gt;</span><br><span class="line">      &lt;name&gt;io.file.buffer.size&lt;/name&gt;</span><br><span class="line">      &lt;value&gt;131072&lt;/value&gt;</span><br><span class="line">   &lt;/property&gt;</span><br><span class="line">   &lt;property&gt;</span><br><span class="line">      &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</span><br><span class="line">      &lt;value&gt;/opt/hadoop-2.6.0/tmp&lt;/value&gt;</span><br><span class="line">      &lt;description&gt;A base for other temporary directories.&lt;/description&gt;</span><br><span class="line">   &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure></p><h4 id="hdfs-site-xml"><a href="#hdfs-site-xml" class="headerlink" title="hdfs-site.xml"></a>hdfs-site.xml</h4><p>这个文件配置hdfs文件系统相关参数，添加以下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line"></span><br><span class="line">  &lt;property&gt;</span><br><span class="line">      &lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class="line">      &lt;value&gt;3&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">      &lt;name&gt;dfs.namenode.name.dir&lt;/name&gt;</span><br><span class="line">      &lt;value&gt;file:/opt/hadoop-2.6.0/dfs/name&lt;/value&gt;</span><br><span class="line">      &lt;description&gt;namenode上存储hdfs name空间元数据&lt;/description&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">      &lt;name&gt;dfs.datanode.data.dir&lt;/name&gt;</span><br><span class="line">      &lt;value&gt;file:/opt/hadoop-2.6.0/dfs/data&lt;/value&gt;</span><br><span class="line">      &lt;description&gt;datanode上数据块的物理存储位置&lt;/description&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">      &lt;name&gt;dfs.namenode.secondary.http-address&lt;/name&gt;</span><br><span class="line">      &lt;value&gt;master:50090&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">      &lt;name&gt;dfs.webhdfs.enabled&lt;/name&gt;</span><br><span class="line">      &lt;value&gt;true&lt;/value&gt;    </span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">      &lt;name&gt;dfs.permissions&lt;/name&gt;</span><br><span class="line">      &lt;value&gt;false&lt;/value&gt;    </span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure></p><h4 id="mapred-site-xml"><a href="#mapred-site-xml" class="headerlink" title="mapred-site.xml"></a>mapred-site.xml</h4><p>这个文件配置mapreduce任务相关参数。首先需要重命名mapred-site.xml.template文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv ./mapred-site.xml.template mapred-site.xml</span><br></pre></td></tr></table></figure></p><p>然后将以下内容添加到 mapred-site.xml:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">   &lt;property&gt;</span><br><span class="line">       &lt;name&gt;mapreduce.framework.name&lt;/name&gt;</span><br><span class="line">       &lt;value&gt;yarn&lt;/value&gt;</span><br><span class="line">   &lt;/property&gt;</span><br><span class="line"></span><br><span class="line">   &lt;property&gt;</span><br><span class="line">       &lt;name&gt;mapreduce.jobhistory.address&lt;/name&gt;</span><br><span class="line">       &lt;value&gt;master:10020&lt;/value&gt;</span><br><span class="line">   &lt;/property&gt;</span><br><span class="line">   </span><br><span class="line">   &lt;property&gt;</span><br><span class="line">       &lt;name&gt;mapreduce.jobhistory.webapp.address&lt;/name&gt;</span><br><span class="line">       &lt;value&gt;master:19888&lt;/value&gt;</span><br><span class="line">   &lt;/property&gt;</span><br><span class="line"></span><br><span class="line">   &lt;property&gt;</span><br><span class="line">       &lt;name&gt;mapreduce.jobhistory.itermediate-done-dir&lt;/name&gt;  </span><br><span class="line">       &lt;value&gt;$&#123;hadoop.tmp.dir&#125;/mr-history/tmp&lt;/value&gt;</span><br><span class="line">   &lt;/property&gt;</span><br><span class="line">  </span><br><span class="line">   &lt;property&gt;</span><br><span class="line">       &lt;name&gt;mapreduce.jobhistory.done-dir&lt;/name&gt;</span><br><span class="line">       &lt;value&gt;$&#123;hadoop.tmp.dir&#125;/mr-history/done&lt;/value&gt;</span><br><span class="line">   &lt;/property&gt;</span><br><span class="line"> </span><br><span class="line">   &lt;property&gt;</span><br><span class="line">    &lt;name&gt;mapreduce.jobtracker.staging.root.dir&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;/user&lt;/value&gt;</span><br><span class="line">   &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure></p><h4 id="yarn-site-xml"><a href="#yarn-site-xml" class="headerlink" title="yarn-site.xml"></a>yarn-site.xml</h4><p>这个文件配置yarn资源管理调度的相关参数,添加以下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">   &lt;property&gt;</span><br><span class="line">      &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</span><br><span class="line">      &lt;value&gt;mapreduce_shuffle&lt;/value&gt;</span><br><span class="line">   &lt;/property&gt;</span><br><span class="line">   &lt;property&gt;</span><br><span class="line">      &lt;name&gt;yarn.nodemanager.aux-services.mapreduce.shuffle.class&lt;/name&gt;</span><br><span class="line">      &lt;value&gt;org.apache.hadoop.mapred.ShuffleHandler&lt;/value&gt;</span><br><span class="line">   &lt;/property&gt;</span><br><span class="line">   &lt;property&gt;</span><br><span class="line">      &lt;name&gt;yarn.resourcemanager.address&lt;/name&gt;</span><br><span class="line">      &lt;value&gt;master:8032&lt;/value&gt;</span><br><span class="line">   &lt;/property&gt;</span><br><span class="line">   &lt;property&gt;</span><br><span class="line">      &lt;name&gt;yarn.resourcemanager.scheduler.address&lt;/name&gt;</span><br><span class="line">      &lt;value&gt;master:8030&lt;/value&gt;</span><br><span class="line">   &lt;/property&gt;</span><br><span class="line">   &lt;property&gt;</span><br><span class="line">      &lt;name&gt;yarn.resourcemanager.resource-tracker.address&lt;/name&gt;</span><br><span class="line">      &lt;value&gt;master:8035&lt;/value&gt;</span><br><span class="line">   &lt;/property&gt;</span><br><span class="line">   &lt;property&gt;</span><br><span class="line">      &lt;name&gt;yarn.resourcemanager.admin.address&lt;/name&gt;</span><br><span class="line">      &lt;value&gt;master:8033&lt;/value&gt;</span><br><span class="line">   &lt;/property&gt; </span><br><span class="line">   &lt;property&gt;</span><br><span class="line">      &lt;name&gt;yarn.resourcemanager.webapp.address&lt;/name&gt;</span><br><span class="line">      &lt;value&gt;master:8088&lt;/value&gt;</span><br><span class="line">   &lt;/property&gt;</span><br><span class="line"></span><br><span class="line">   &lt;property&gt;</span><br><span class="line">      &lt;name&gt;yarn.app.mapreduce.am.staging-dir&lt;/name&gt;</span><br><span class="line">      &lt;value&gt;/user&lt;/value&gt;</span><br><span class="line">   &lt;/property&gt;</span><br><span class="line"></span><br><span class="line">  &lt;property&gt;</span><br><span class="line">      &lt;name&gt;yarn.nodemanager.resource.memory-mb&lt;/name&gt;</span><br><span class="line">      &lt;value&gt;20480&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">      &lt;name&gt;yarn.scheduler.minimum-allocation-mb&lt;/name&gt;</span><br><span class="line">      &lt;value&gt;2048&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">      &lt;name&gt;yarn.nodemanager.vmem-pmem-ratio&lt;/name&gt;</span><br><span class="line">      &lt;value&gt;2.1&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line"></span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure></p><h2 id="三、-运行及测试"><a href="#三、-运行及测试" class="headerlink" title="三、 运行及测试"></a>三、 运行及测试</h2><p>ssh登录master主机后，进行以下操作。</p><h3 id="格式化分布式文件系统-已有hadoop系统请跳过这一步"><a href="#格式化分布式文件系统-已有hadoop系统请跳过这一步" class="headerlink" title="格式化分布式文件系统(已有hadoop系统请跳过这一步)"></a>格式化分布式文件系统(已有hadoop系统请跳过这一步)</h3><font color="#FF0000" size="4">只有在第一次搭建hadoop系统时需要进行格式化操作，请不要在已有的hadoop系统上格式化，这会删除所有的数据！！！!</font><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hdfs namenode -format</span><br></pre></td></tr></table></figure><h3 id="运行文件系统管理器hdfs"><a href="#运行文件系统管理器hdfs" class="headerlink" title="运行文件系统管理器hdfs"></a>运行文件系统管理器hdfs</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start-dfs.sh</span><br></pre></td></tr></table></figure><h3 id="运行任务调度管理器yarn"><a href="#运行任务调度管理器yarn" class="headerlink" title="运行任务调度管理器yarn"></a>运行任务调度管理器yarn</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start-yarn.sh</span><br></pre></td></tr></table></figure><h3 id="查看相关进程"><a href="#查看相关进程" class="headerlink" title="查看相关进程"></a>查看相关进程</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jps</span><br></pre></td></tr></table></figure><p>在master中可以看到：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[hadoop@master ~]$ jps</span><br><span class="line">5859 SecondaryNameNode</span><br><span class="line">6003 ResourceManager</span><br><span class="line">6293 Jps</span><br><span class="line">24991 JobHistoryServer</span><br><span class="line">5695 NameNode</span><br></pre></td></tr></table></figure></p><p>在各个slave中可以看到：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hadoop@ajm-zju:/$ jps</span><br><span class="line">28976 DataNode</span><br><span class="line">31952 NodeManager</span><br><span class="line">32158 Jps</span><br></pre></td></tr></table></figure></p><h3 id="Web查看信息"><a href="#Web查看信息" class="headerlink" title="Web查看信息"></a>Web查看信息</h3><p>在web上可以看到集群启动的信息：</p><ul><li>查看hdfs: <a href="master:50070" target="_blank" rel="noopener">master:50070</a></li><li>查看resourcemanager: <a href="master:8088" target="_blank" rel="noopener">master:8088</a></li></ul><p>如果web页面访问不了，可能是master主机的防火墙未关闭, ssh登录master主机,运行以下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl status firewalld.service # 查看防火墙状态</span><br></pre></td></tr></table></figure></p><p><img src="/images/wall.jpg" alt=""><br>若图中的Active:显示为active，则需要关闭防火墙。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl stop firewalld.service # 关闭防火墙</span><br></pre></td></tr></table></figure></p><p>关闭后重新访问页面即可。</p><h3 id="关闭hadoop"><a href="#关闭hadoop" class="headerlink" title="关闭hadoop"></a>关闭hadoop</h3><p>执行相反的操作<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">stop-yarn.sh</span><br><span class="line">stop-dfs.sh</span><br></pre></td></tr></table></figure></p><blockquote><p>本文引用了以下内容</p><ul><li><a href="https://www.jianshu.com/p/4e0dc91ad86e" target="_blank" rel="noopener">Hadoop真分布式集群最速搭建攻略</a></li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hadoop </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
